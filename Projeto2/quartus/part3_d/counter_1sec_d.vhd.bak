library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity counter_1sec is
    port(clk, rst: in std_logic;
        q: out std_logic_vector(6 downto 0));
end counter_1sec;

architecture behavior of counter_1sec is

    component display
    port(s: in std_logic_vector(3 downto 0);
        d: out std_logic_vector(6 downto 0));
    end component;

    signal counter: std_logic_vector(26 downto 0) := (others => '0');
    signal counter_q: std_logic_vector(3 downto 0) := (others => '0');
    signal clk_1sec: std_logic := '0';
    constant max: unsigned(26 downto 0) := to_unsigned(50000000-1, 27);

begin
    process(clk)
    begin
        if(falling_edge(clk)) then 
            if(unsigned(counter) = max) then
                counter <= (others => '0');
                clk_1sec <= not clk_1sec;
            else
                counter <= std_logic_vector(unsigned(counter)+1);
            end if;
        end if;
    end process;
    
    process(clk_1sec, rst) then
    begin
        if(rst = '1') then
            counter_q <= (others => '0');
        elsif(rising_edge(clk_1sec)) then
            if(counter_q = "1001") then
                counter_q <= (others => 0);
            else
                counter_q <= std_logic_vector(unsigned(counter_q) + 1);
            end if;
        end if;
    end process;
    
    inst: display
    port map(s(0) => counter_q(0),
             s(1) => counter_q(1),
             s(2) => counter_q(2),
             s(3) => counter_q(3),
             p(0) => q(0),
             p(1) => q(1),
             p(2) => q(2),
             p(3) => q(3),
             p(4) => q(4),
             p(5) => q(5),
             p(6) => q(6));

end behavior;