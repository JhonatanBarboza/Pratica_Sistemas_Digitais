|morse
sw[0] => Mux0.IN10
sw[0] => Mux1.IN10
sw[0] => Mux2.IN5
sw[0] => Mux3.IN10
sw[0] => Mux4.IN5
sw[0] => Mux5.IN10
sw[0] => Mux6.IN10
sw[0] => Mux7.IN10
sw[0] => Mux8.IN10
sw[1] => Mux0.IN9
sw[1] => Mux1.IN9
sw[1] => Mux2.IN4
sw[1] => Mux3.IN9
sw[1] => Mux5.IN9
sw[1] => Mux6.IN9
sw[1] => Mux7.IN9
sw[1] => Mux8.IN9
sw[2] => Mux0.IN8
sw[2] => Mux1.IN8
sw[2] => Mux3.IN8
sw[2] => Mux4.IN4
sw[2] => Mux5.IN8
sw[2] => Mux6.IN8
sw[2] => Mux7.IN8
sw[2] => Mux8.IN8
key1 => state.OUTPUTSELECT
key1 => state.OUTPUTSELECT
key1 => state.OUTPUTSELECT
key1 => state.OUTPUTSELECT
key1 => state.OUTPUTSELECT
key1 => state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => next_state.OUTPUTSELECT
key1 => morse_code[0].LATCH_ENABLE
key1 => morse_code[1].LATCH_ENABLE
key1 => morse_code[2].LATCH_ENABLE
key1 => morse_code[3].LATCH_ENABLE
key1 => morse_code[4].LATCH_ENABLE
key1 => morse_code[5].LATCH_ENABLE
key1 => morse_code[6].LATCH_ENABLE
key1 => morse_code[7].LATCH_ENABLE
key1 => morse_code[8].LATCH_ENABLE
key1 => morse_code[9].LATCH_ENABLE
key1 => morse_code[10].LATCH_ENABLE
key1 => counter[31].ENA
key1 => counter[30].ENA
key1 => counter[29].ENA
key1 => counter[28].ENA
key1 => counter[27].ENA
key1 => counter[26].ENA
key1 => counter[25].ENA
key1 => counter[24].ENA
key1 => counter[23].ENA
key1 => counter[22].ENA
key1 => counter[21].ENA
key1 => counter[20].ENA
key1 => counter[19].ENA
key1 => counter[18].ENA
key1 => counter[17].ENA
key1 => counter[16].ENA
key1 => counter[15].ENA
key1 => counter[14].ENA
key1 => counter[13].ENA
key1 => counter[12].ENA
key1 => counter[11].ENA
key1 => counter[10].ENA
key1 => counter[9].ENA
key1 => counter[8].ENA
key1 => counter[7].ENA
key1 => counter[6].ENA
key1 => counter[5].ENA
key1 => counter[4].ENA
key1 => counter[3].ENA
key1 => counter[2].ENA
key1 => counter[1].ENA
key1 => counter[0].ENA
key1 => led~reg0.ENA
key1 => bit_index[31].ENA
key1 => bit_index[30].ENA
key1 => bit_index[29].ENA
key1 => bit_index[28].ENA
key1 => bit_index[27].ENA
key1 => bit_index[26].ENA
key1 => bit_index[25].ENA
key1 => bit_index[24].ENA
key1 => bit_index[23].ENA
key1 => bit_index[22].ENA
key1 => bit_index[21].ENA
key1 => bit_index[20].ENA
key1 => bit_index[19].ENA
key1 => bit_index[18].ENA
key1 => bit_index[17].ENA
key1 => bit_index[16].ENA
key1 => bit_index[15].ENA
key1 => bit_index[14].ENA
key1 => bit_index[13].ENA
key1 => bit_index[12].ENA
key1 => bit_index[11].ENA
key1 => bit_index[10].ENA
key1 => bit_index[9].ENA
key1 => bit_index[8].ENA
key1 => bit_index[7].ENA
key1 => bit_index[6].ENA
key1 => bit_index[5].ENA
key1 => bit_index[4].ENA
key1 => bit_index[3].ENA
key1 => bit_index[2].ENA
key1 => bit_index[1].ENA
key1 => bit_index[0].ENA
key0 => next_state.finished.OUTPUTSELECT
key0 => next_state.wait_long.OUTPUTSELECT
key0 => next_state.wait_short.OUTPUTSELECT
key0 => next_state.dash.OUTPUTSELECT
key0 => next_state.dot.OUTPUTSELECT
key0 => next_state.idle.OUTPUTSELECT
key0 => bit_index[0].ACLR
key0 => bit_index[1].ACLR
key0 => bit_index[2].ACLR
key0 => bit_index[3].ACLR
key0 => bit_index[4].ACLR
key0 => bit_index[5].ACLR
key0 => bit_index[6].ACLR
key0 => bit_index[7].ACLR
key0 => bit_index[8].ACLR
key0 => bit_index[9].ACLR
key0 => bit_index[10].ACLR
key0 => bit_index[11].ACLR
key0 => bit_index[12].ACLR
key0 => bit_index[13].ACLR
key0 => bit_index[14].ACLR
key0 => bit_index[15].ACLR
key0 => bit_index[16].ACLR
key0 => bit_index[17].ACLR
key0 => bit_index[18].ACLR
key0 => bit_index[19].ACLR
key0 => bit_index[20].ACLR
key0 => bit_index[21].ACLR
key0 => bit_index[22].ACLR
key0 => bit_index[23].ACLR
key0 => bit_index[24].ACLR
key0 => bit_index[25].ACLR
key0 => bit_index[26].ACLR
key0 => bit_index[27].ACLR
key0 => bit_index[28].ACLR
key0 => bit_index[29].ACLR
key0 => bit_index[30].ACLR
key0 => bit_index[31].ACLR
key0 => led~reg0.ACLR
key0 => counter[0].ACLR
key0 => counter[1].ACLR
key0 => counter[2].ACLR
key0 => counter[3].ACLR
key0 => counter[4].ACLR
key0 => counter[5].ACLR
key0 => counter[6].ACLR
key0 => counter[7].ACLR
key0 => counter[8].ACLR
key0 => counter[9].ACLR
key0 => counter[10].ACLR
key0 => counter[11].ACLR
key0 => counter[12].ACLR
key0 => counter[13].ACLR
key0 => counter[14].ACLR
key0 => counter[15].ACLR
key0 => counter[16].ACLR
key0 => counter[17].ACLR
key0 => counter[18].ACLR
key0 => counter[19].ACLR
key0 => counter[20].ACLR
key0 => counter[21].ACLR
key0 => counter[22].ACLR
key0 => counter[23].ACLR
key0 => counter[24].ACLR
key0 => counter[25].ACLR
key0 => counter[26].ACLR
key0 => counter[27].ACLR
key0 => counter[28].ACLR
key0 => counter[29].ACLR
key0 => counter[30].ACLR
key0 => counter[31].ACLR
key0 => state~6.DATAIN
clk => bit_index[0].CLK
clk => bit_index[1].CLK
clk => bit_index[2].CLK
clk => bit_index[3].CLK
clk => bit_index[4].CLK
clk => bit_index[5].CLK
clk => bit_index[6].CLK
clk => bit_index[7].CLK
clk => bit_index[8].CLK
clk => bit_index[9].CLK
clk => bit_index[10].CLK
clk => bit_index[11].CLK
clk => bit_index[12].CLK
clk => bit_index[13].CLK
clk => bit_index[14].CLK
clk => bit_index[15].CLK
clk => bit_index[16].CLK
clk => bit_index[17].CLK
clk => bit_index[18].CLK
clk => bit_index[19].CLK
clk => bit_index[20].CLK
clk => bit_index[21].CLK
clk => bit_index[22].CLK
clk => bit_index[23].CLK
clk => bit_index[24].CLK
clk => bit_index[25].CLK
clk => bit_index[26].CLK
clk => bit_index[27].CLK
clk => bit_index[28].CLK
clk => bit_index[29].CLK
clk => bit_index[30].CLK
clk => bit_index[31].CLK
clk => led~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => next_state~7.DATAIN
clk => state~4.DATAIN
led <= led~reg0.DB_MAX_OUTPUT_PORT_TYPE


